service: slackBotLambda

provider:
  name: aws
  runtime: nodejs10.x
  profile: bot-dev

  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'sns:Publish'
        - 'sns:GetTopicAttributes'
      Resource:
        - !Ref clientSlackEvents
        - !Ref clientSlackInteractive
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - Fn::ImportValue: ClientsTableArn
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - Fn::ImportValue: ProjectsTableArn

  environment:
    # AWS configuration
    ACCESS_KEY_ID: DEFAULT_ACCESS_KEY
    SECRET_ACCESS_KEY: DEFAULT_SECRET
    REGION: localhost
    DYNAMODB_ENDPOINT: http://localhost:8000

    # Client Slack bot configuration
    CLIENT_ID: '866134784247.856745646417'
    CLIENT_SECRET: ec1e7f444e8eafa0aee7a9d36a26abe4
    CLIENT_SIGNING_SECRET: 87a7af09774e3550f8f4c9c201373aca
    ADD_TO_SLACK_BUTTON: '<a href="https://slack.com/oauth/authorize?client_id=866134784247.856745646417&scope=bot,channels:write,users:read"><img alt="Add to Slack" height="40" width="139" src="https://platform.slack-edge.com/img/add_to_slack.png" srcset="https://platform.slack-edge.com/img/add_to_slack.png 1x, https://platform.slack-edge.com/img/add_to_slack@2x.png 2x"></a>'

    # Central TC Lambda URI
    CENTRAL_LAMBDA_URI: 'http://localhost:3000'

    # 128 bit Token encryption/decryption key used by Database. You can set this to any string (128 bit) or just use the default value provided here
    CRYPTO_KEY: 'p3s6v9y$B&E(H+Mb'

    # SNS topics
    CLIENT_SLACK_EVENTS_TOPIC: ${self:custom.sns.clientSlackEvents}
    CLIENT_SLACK_EVENTS_INTERACTIVE: ${self:custom.sns.clientSlackInteractive}

    # SNS Configuration
    SNS_ENDPOINT: http://localhost:4001 # local development only
    SNS_REGION: ${self:custom.region}
    SNS_ACCOUNT_ID: 123456789012

functions:
  client_slack_events:
    handler: src/functions/receiver/events.handler
    description: Handles slack events from Client Slack
    events:
      - http:
          path: slack/events
          method: post

  client_slack_interactive:
    handler: src/functions/receiver/interactive.handler
    description: Handles slack interactive messages from Client Slack
    events:
      - http:
          path: slack/interactive
          method: post

  events:
    handler: src/functions/events.handler
    description: Handles slack events
    events:
      - sns:
          arn: !Ref clientSlackEvents
          topicName: ${self:custom.sns.clientSlackEvents}

  interactive:
    handler: src/functions/interactive.handler
    description: Handles interactive components
    events:
      - sns:
          arn: !Ref clientSlackInteractive
          topicName: ${self:custom.sns.clientSlackInteractive}

  response:
    handler: src/functions/response.handler
    description: Handles project response
    events:
      - http:
          path: response
          method: post

  approve:
    handler: src/functions/approve.handler
    description: Receives project approve
    events:
      - http:
          path: approve
          method: post

  signIn:
    handler: src/functions/signIn.handler
    description: Returns the Add to slack button to sign in
    events:
      - http:
          path: signin
          method: get

  auth:
    handler: src/functions/auth.handler
    description: Handles oauth redirect
    events:
      - http:
          path: auth/redirect
          method: get

plugins:
  - serverless-offline
  - serverless-offline-sns

custom:
  serverless-offline:
    port: 3001
  serverless-offline-sns:
    port: 4001
    debug: false
  sns:
    clientSlackEvents: client-slack-events
    clientSlackInteractive: client-slack-interactive
  region: ${opt:region, self:provider.region}

resources:
  Resources:
    clientSlackEvents:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.sns.clientSlackEvents}
    clientSlackInteractive:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.sns.clientSlackInteractive}
